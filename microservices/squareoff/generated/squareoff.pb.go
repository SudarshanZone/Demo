// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: squareoff.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SquareOffRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceFlag           string `protobuf:"bytes,1,opt,name=source_flag,json=sourceFlag,proto3" json:"source_flag,omitempty"`
	StockCode            string `protobuf:"bytes,2,opt,name=stock_code,json=stockCode,proto3" json:"stock_code,omitempty"`
	ExchangeCode         string `protobuf:"bytes,3,opt,name=exchange_code,json=exchangeCode,proto3" json:"exchange_code,omitempty"`
	Quantity             string `protobuf:"bytes,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price                string `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	Action               string `protobuf:"bytes,6,opt,name=action,proto3" json:"action,omitempty"`
	OrderType            string `protobuf:"bytes,7,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`
	Validity             string `protobuf:"bytes,8,opt,name=validity,proto3" json:"validity,omitempty"`
	StoplossPrice        string `protobuf:"bytes,9,opt,name=stoploss_price,json=stoplossPrice,proto3" json:"stoploss_price,omitempty"`
	DisclosedQuantity    string `protobuf:"bytes,10,opt,name=disclosed_quantity,json=disclosedQuantity,proto3" json:"disclosed_quantity,omitempty"`
	ProtectionPercentage string `protobuf:"bytes,11,opt,name=protection_percentage,json=protectionPercentage,proto3" json:"protection_percentage,omitempty"`
	SettlementId         string `protobuf:"bytes,12,opt,name=settlement_id,json=settlementId,proto3" json:"settlement_id,omitempty"`
	MarginAmount         string `protobuf:"bytes,13,opt,name=margin_amount,json=marginAmount,proto3" json:"margin_amount,omitempty"`
	OpenQuantity         string `protobuf:"bytes,14,opt,name=open_quantity,json=openQuantity,proto3" json:"open_quantity,omitempty"`
	CoverQuantity        string `protobuf:"bytes,15,opt,name=cover_quantity,json=coverQuantity,proto3" json:"cover_quantity,omitempty"`
	ProductType          string `protobuf:"bytes,16,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	ExpiryDate           string `protobuf:"bytes,17,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
	Right                string `protobuf:"bytes,18,opt,name=right,proto3" json:"right,omitempty"`
	StrikePrice          string `protobuf:"bytes,19,opt,name=strike_price,json=strikePrice,proto3" json:"strike_price,omitempty"`
	ValidityDate         string `protobuf:"bytes,20,opt,name=validity_date,json=validityDate,proto3" json:"validity_date,omitempty"`
	AliasName            string `protobuf:"bytes,21,opt,name=alias_name,json=aliasName,proto3" json:"alias_name,omitempty"`
	TradePassword        string `protobuf:"bytes,22,opt,name=trade_password,json=tradePassword,proto3" json:"trade_password,omitempty"`
}

func (x *SquareOffRequest) Reset() {
	*x = SquareOffRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_squareoff_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquareOffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquareOffRequest) ProtoMessage() {}

func (x *SquareOffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_squareoff_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquareOffRequest.ProtoReflect.Descriptor instead.
func (*SquareOffRequest) Descriptor() ([]byte, []int) {
	return file_squareoff_proto_rawDescGZIP(), []int{0}
}

func (x *SquareOffRequest) GetSourceFlag() string {
	if x != nil {
		return x.SourceFlag
	}
	return ""
}

func (x *SquareOffRequest) GetStockCode() string {
	if x != nil {
		return x.StockCode
	}
	return ""
}

func (x *SquareOffRequest) GetExchangeCode() string {
	if x != nil {
		return x.ExchangeCode
	}
	return ""
}

func (x *SquareOffRequest) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *SquareOffRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *SquareOffRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SquareOffRequest) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *SquareOffRequest) GetValidity() string {
	if x != nil {
		return x.Validity
	}
	return ""
}

func (x *SquareOffRequest) GetStoplossPrice() string {
	if x != nil {
		return x.StoplossPrice
	}
	return ""
}

func (x *SquareOffRequest) GetDisclosedQuantity() string {
	if x != nil {
		return x.DisclosedQuantity
	}
	return ""
}

func (x *SquareOffRequest) GetProtectionPercentage() string {
	if x != nil {
		return x.ProtectionPercentage
	}
	return ""
}

func (x *SquareOffRequest) GetSettlementId() string {
	if x != nil {
		return x.SettlementId
	}
	return ""
}

func (x *SquareOffRequest) GetMarginAmount() string {
	if x != nil {
		return x.MarginAmount
	}
	return ""
}

func (x *SquareOffRequest) GetOpenQuantity() string {
	if x != nil {
		return x.OpenQuantity
	}
	return ""
}

func (x *SquareOffRequest) GetCoverQuantity() string {
	if x != nil {
		return x.CoverQuantity
	}
	return ""
}

func (x *SquareOffRequest) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *SquareOffRequest) GetExpiryDate() string {
	if x != nil {
		return x.ExpiryDate
	}
	return ""
}

func (x *SquareOffRequest) GetRight() string {
	if x != nil {
		return x.Right
	}
	return ""
}

func (x *SquareOffRequest) GetStrikePrice() string {
	if x != nil {
		return x.StrikePrice
	}
	return ""
}

func (x *SquareOffRequest) GetValidityDate() string {
	if x != nil {
		return x.ValidityDate
	}
	return ""
}

func (x *SquareOffRequest) GetAliasName() string {
	if x != nil {
		return x.AliasName
	}
	return ""
}

func (x *SquareOffRequest) GetTradePassword() string {
	if x != nil {
		return x.TradePassword
	}
	return ""
}

type SquareOffResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SquareOffResponse) Reset() {
	*x = SquareOffResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_squareoff_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquareOffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquareOffResponse) ProtoMessage() {}

func (x *SquareOffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_squareoff_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquareOffResponse.ProtoReflect.Descriptor instead.
func (*SquareOffResponse) Descriptor() ([]byte, []int) {
	return file_squareoff_proto_rawDescGZIP(), []int{1}
}

func (x *SquareOffResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SquareOffResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_squareoff_proto protoreflect.FileDescriptor

var file_squareoff_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x6f, 0x66, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x6f, 0x66, 0x66, 0x22, 0x85, 0x06, 0x0a,
	0x10, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x4f, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x74, 0x6f, 0x70, 0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x6c, 0x6f, 0x73, 0x73, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x64, 0x69, 0x73, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x33, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6d,
	0x61, 0x72, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74,
	0x72, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x45, 0x0a, 0x11, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x4f, 0x66,
	0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x5f, 0x0a, 0x10, 0x53,
	0x71, 0x75, 0x61, 0x72, 0x65, 0x4f, 0x66, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4b, 0x0a, 0x0e, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x4f, 0x66, 0x66, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x1b, 0x2e, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x6f, 0x66, 0x66, 0x2e, 0x53, 0x71,
	0x75, 0x61, 0x72, 0x65, 0x4f, 0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x6f, 0x66, 0x66, 0x2e, 0x53, 0x71, 0x75, 0x61, 0x72,
	0x65, 0x4f, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x14, 0x5a, 0x12,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_squareoff_proto_rawDescOnce sync.Once
	file_squareoff_proto_rawDescData = file_squareoff_proto_rawDesc
)

func file_squareoff_proto_rawDescGZIP() []byte {
	file_squareoff_proto_rawDescOnce.Do(func() {
		file_squareoff_proto_rawDescData = protoimpl.X.CompressGZIP(file_squareoff_proto_rawDescData)
	})
	return file_squareoff_proto_rawDescData
}

var file_squareoff_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_squareoff_proto_goTypes = []any{
	(*SquareOffRequest)(nil),  // 0: squareoff.SquareOffRequest
	(*SquareOffResponse)(nil), // 1: squareoff.SquareOffResponse
}
var file_squareoff_proto_depIdxs = []int32{
	0, // 0: squareoff.SquareOffService.SquareOffOrder:input_type -> squareoff.SquareOffRequest
	1, // 1: squareoff.SquareOffService.SquareOffOrder:output_type -> squareoff.SquareOffResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_squareoff_proto_init() }
func file_squareoff_proto_init() {
	if File_squareoff_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_squareoff_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SquareOffRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_squareoff_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SquareOffResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_squareoff_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_squareoff_proto_goTypes,
		DependencyIndexes: file_squareoff_proto_depIdxs,
		MessageInfos:      file_squareoff_proto_msgTypes,
	}.Build()
	File_squareoff_proto = out.File
	file_squareoff_proto_rawDesc = nil
	file_squareoff_proto_goTypes = nil
	file_squareoff_proto_depIdxs = nil
}
